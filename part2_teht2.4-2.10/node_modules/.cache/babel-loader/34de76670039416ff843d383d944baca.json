{"ast":null,"code":"var _jsxFileName = \"/home/atte/WebMob2021-workspace/part2/part2_teht2.4-2.10/src/App.js\";\nimport React from 'react'; // teht 2.7 Reminder, part 4\n// If the whole application is in one component, refactor it by dividing it into several components. \n// The state should remain in the root component, however.\n// Separating two components from the application is enough here. Good candidates include \n// the code for viewing a invidual reminder entry and the form for adding a new entry.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reminder = ({\n  name,\n  timestamp\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [timestamp, \": \", name]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Reminder;\n\nconst ReminderForm = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: props.addReminderFunction,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Sis\\xE4lt\\xF6: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: props.nameToAdd,\n          onChange: props.handleReminderChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"P\\xE4iv\\xE4ys: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: props.dateToAdd,\n          onChange: props.handleDateChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Lis\\xE4\\xE4 muistutus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c2 = ReminderForm;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReminderChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        newName: event.target.value\n      });\n    };\n\n    this.handleDateChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        newDate: event.target.value\n      });\n    };\n\n    this.addReminder = event => {\n      event.preventDefault(); // teht 2.5:  eri polut sen mukaan,\n      // onko muistiinpano jo lisätty\n      // toinen mahdollinen ratkaisu some-metodilla:\n      // this.state.reminders.some(r => r.name === this.state.newName)\n\n      if (this.state.reminders.map(reminder => reminder.name).includes(this.state.newName)) {\n        // muistiinpano on jo lisätty\n        console.log('nappia painettu, muistiinpano on jo listalla');\n        alert('Ei voida lisätä muistutusta listaan, koska se on jo lisätty!');\n      } else {\n        console.log('debug else-lohko');\n        const newReminderObject = {\n          timestamp: this.state.newDate,\n          name: this.state.newName\n        };\n        const tempReminders = this.state.reminders.concat(newReminderObject);\n        console.log('nappia painettu');\n        console.log(event.target);\n        this.setState({\n          reminders: tempReminders,\n          newName: '',\n          newDate: ''\n        });\n      }\n    };\n\n    this.state = {\n      reminders: [{\n        name: 'Osta metrilakua torilta',\n        timestamp: \"15.3.2021, klo 12\"\n      }],\n      newName: '',\n      newDate: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Muistutukset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ReminderForm, {\n        addReminderFunction: this.addReminder,\n        nameToAdd: this.newName,\n        handleReminderChange: this.handleReminderChange,\n        handleDateChange: this.handleDateChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"T\\xE4m\\xE4nhetkiset muistutukset:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.reminders.map(reminder => /*#__PURE__*/_jsxDEV(Reminder, {\n          name: reminder.name,\n          timestamp: reminder.timestamp\n        }, reminder.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Reminder\");\n$RefreshReg$(_c2, \"ReminderForm\");","map":{"version":3,"sources":["/home/atte/WebMob2021-workspace/part2/part2_teht2.4-2.10/src/App.js"],"names":["React","Reminder","name","timestamp","ReminderForm","props","addReminderFunction","nameToAdd","handleReminderChange","dateToAdd","handleDateChange","App","Component","constructor","event","console","log","target","value","setState","newName","newDate","addReminder","preventDefault","state","reminders","map","reminder","includes","alert","newReminderObject","tempReminders","concat","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n// teht 2.7 Reminder, part 4\n\n// If the whole application is in one component, refactor it by dividing it into several components. \n// The state should remain in the root component, however.\n\n// Separating two components from the application is enough here. Good candidates include \n// the code for viewing a invidual reminder entry and the form for adding a new entry.\n\n\nconst Reminder = ({ name, timestamp }) => {\n\n    return (\n\n        <li>{timestamp}: {name}</li>\n    )\n}\n\n\nconst ReminderForm = (props) => {\n\n    return (\n        <div>\n            <form onSubmit={props.addReminderFunction}>\n                <div>\n                    Sisältö: <input value={props.nameToAdd}\n                        onChange={props.handleReminderChange} />\n                </div>\n                <div>\n                    Päiväys: <input value={props.dateToAdd}\n                        onChange={props.handleDateChange} />\n                </div>\n                <div>\n                    <button type=\"submit\">Lisää muistutus</button>\n                </div>\n            </form>\n        </div>\n    )\n\n}\n\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            reminders: [\n                {\n                    name: 'Osta metrilakua torilta',\n                    timestamp: \"15.3.2021, klo 12\"\n                }\n            ],\n            newName: '',\n            newDate: ''\n        }\n    }\n\n    handleReminderChange = (event) => {\n        console.log(event.target.value)\n        this.setState({ newName: event.target.value })\n    }\n\n    handleDateChange = (event) => {\n        console.log(event.target.value)\n        this.setState({ newDate: event.target.value })\n\n    }\n\n    addReminder = (event) => {\n        event.preventDefault()\n\n        // teht 2.5:  eri polut sen mukaan,\n        // onko muistiinpano jo lisätty\n        // toinen mahdollinen ratkaisu some-metodilla:\n        // this.state.reminders.some(r => r.name === this.state.newName)\n        if (this.state.reminders.map(reminder => reminder.name).includes(this.state.newName)) {\n\n            // muistiinpano on jo lisätty\n            console.log('nappia painettu, muistiinpano on jo listalla')\n            alert('Ei voida lisätä muistutusta listaan, koska se on jo lisätty!')\n\n        } else {\n            console.log('debug else-lohko')\n\n            const newReminderObject = {\n                timestamp: this.state.newDate,\n                name: this.state.newName\n            }\n\n            const tempReminders = this.state.reminders.concat(newReminderObject)\n\n            console.log('nappia painettu')\n            console.log(event.target)\n\n\n            this.setState({\n                reminders: tempReminders,\n                newName: '',\n                newDate: ''\n            })\n\n        }\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <h2>Muistutukset</h2>\n                <ReminderForm addReminderFunction={this.addReminder} nameToAdd={this.newName}\n                    handleReminderChange={this.handleReminderChange} handleDateChange={this.handleDateChange} />\n\n\n                <h2>Tämänhetkiset muistutukset:</h2>\n                <ul>\n                    {this.state.reminders.map(reminder => <Reminder key={reminder.name} name={reminder.name} timestamp={reminder.timestamp} />)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default App\n\n\n"]},"metadata":{},"sourceType":"module"}