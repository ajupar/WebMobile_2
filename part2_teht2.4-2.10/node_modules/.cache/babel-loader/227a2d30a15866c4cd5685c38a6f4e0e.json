{"ast":null,"code":"var _jsxFileName = \"/home/atte/WebMob2021-workspace/part2/part2_teht2.4-2.10/src/App.js\";\nimport React from 'react'; // teht 2.7 Reminder, part 4\n// If the whole application is in one component, refactor it by dividing it into several components. \n// The state should remain in the root component, however.\n// Separating two components from the application is enough here. Good candidates include \n// the code for viewing a invidual reminder entry and the form for adding a new entry.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Reminder = ({\n  name,\n  timestamp\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [name, \" \", timestamp]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Reminder;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleReminderChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        newName: event.target.value\n      });\n    };\n\n    this.handleDateChange = event => {\n      console.log(event.target.value);\n      this.setState({\n        newDate: event.target.value\n      });\n    };\n\n    this.addReminder = event => {\n      event.preventDefault(); // teht 2.5:  eri polut sen mukaan,\n      // onko muistiinpano jo lisätty\n      // toinen mahdollinen ratkaisu some-metodilla:\n      // this.state.reminders.some(r => r.name === this.state.newName)\n\n      if (this.state.reminders.map(reminder => reminder.name).includes(this.state.newName)) {\n        // muistiinpano on jo lisätty\n        console.log('nappia painettu, muistiinpano on jo listalla');\n        alert('Ei voida lisätä muistutusta listaan, koska se on jo lisätty!');\n      } else {\n        console.log('debug else-lohko');\n        const newReminderObject = {\n          name: this.state.newName,\n          timestamp: this.state.newDate\n        };\n        const tempReminders = this.state.reminders.concat(newReminderObject);\n        console.log('nappia painettu');\n        console.log(event.target);\n        return () => {\n          this.setState({\n            reminders: tempReminders,\n            newName: '',\n            newDate: ''\n          });\n        };\n      }\n    };\n\n    this.state = {\n      reminders: [{\n        name: 'Osta metrilakua torilta',\n        timestamp: \"15.3.2021, klo 12\"\n      }],\n      newName: '',\n      newDate: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Muistutukset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addReminder,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Sis\\xE4lt\\xF6: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.newName,\n            onChange: this.handleReminderChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"P\\xE4iv\\xE4ys: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: this.state.newDate,\n            onChange: this.handleDateChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Lis\\xE4\\xE4 muistutus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"T\\xE4m\\xE4nhetkiset muistutukset:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.reminders.map(reminder => /*#__PURE__*/_jsxDEV(Reminder, {\n          name: reminder.name,\n          timestamp: reminder.timestamp\n        }, reminder.name, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 59\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reminder\");","map":{"version":3,"sources":["/home/atte/WebMob2021-workspace/part2/part2_teht2.4-2.10/src/App.js"],"names":["React","Reminder","name","timestamp","App","Component","constructor","props","handleReminderChange","event","console","log","target","value","setState","newName","handleDateChange","newDate","addReminder","preventDefault","state","reminders","map","reminder","includes","alert","newReminderObject","tempReminders","concat","render"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n// teht 2.7 Reminder, part 4\n\n// If the whole application is in one component, refactor it by dividing it into several components. \n// The state should remain in the root component, however.\n\n// Separating two components from the application is enough here. Good candidates include \n// the code for viewing a invidual reminder entry and the form for adding a new entry.\n\n\nconst Reminder = ({ name, timestamp }) => {\n\n    return (\n\n        <li>{name} {timestamp}</li>\n    )\n}\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            reminders: [\n                {\n                    name: 'Osta metrilakua torilta',\n                    timestamp: \"15.3.2021, klo 12\"\n                }\n            ],\n            newName: '',\n            newDate: ''\n        }\n    }\n\n    handleReminderChange = (event) => {\n        console.log(event.target.value)\n        this.setState({ newName: event.target.value })\n    }\n\n    handleDateChange = (event) => {\n        console.log(event.target.value)\n        this.setState({ newDate: event.target.value })\n\n    }\n\n    addReminder = (event) => {\n        event.preventDefault()\n\n        // teht 2.5:  eri polut sen mukaan,\n        // onko muistiinpano jo lisätty\n        // toinen mahdollinen ratkaisu some-metodilla:\n        // this.state.reminders.some(r => r.name === this.state.newName)\n        if (this.state.reminders.map(reminder => reminder.name).includes(this.state.newName)) {\n\n            // muistiinpano on jo lisätty\n            console.log('nappia painettu, muistiinpano on jo listalla')\n            alert('Ei voida lisätä muistutusta listaan, koska se on jo lisätty!')\n\n        } else {\n            console.log('debug else-lohko')\n\n            const newReminderObject = {\n                name: this.state.newName,\n                timestamp: this.state.newDate\n            }\n\n            const tempReminders = this.state.reminders.concat(newReminderObject)\n\n            console.log('nappia painettu')\n            console.log(event.target)\n\n            return () => {\n                this.setState({\n                    reminders: tempReminders,\n                    newName: '',\n                    newDate: ''\n                })\n            }\n        }\n    }\n\n    render() {\n\n\n        return (\n            <div>\n                <h2>Muistutukset</h2>\n                <form onSubmit={addReminder}>\n                    <div>\n                        Sisältö: <input value={this.state.newName}\n                            onChange={this.handleReminderChange} />\n                    </div>\n                    <div>\n                        Päiväys: <input value={this.state.newDate}\n                            onChange={this.handleDateChange} />\n                    </div>\n\n                    <div>\n                        <button type=\"submit\">Lisää muistutus</button>\n                    </div>\n                </form>\n\n                <h2>Tämänhetkiset muistutukset:</h2>\n                <ul>\n                    {this.state.reminders.map(reminder => <Reminder key={reminder.name} name={reminder.name} timestamp={reminder.timestamp} />)}\n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default App\n\n\n"]},"metadata":{},"sourceType":"module"}